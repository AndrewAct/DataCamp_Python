# # 7/11/2020
# Unstructured text data cannot be directly used in most analyses. Multiple steps need to be taken to go from a long free form string to a set of numeric columns in the right format that can be ingested by a machine learning model. The first step of this process is to standardize the data and eliminate any characters that could cause problems later on in your analytic pipeline.

# In this chapter you will be working with a new dataset containing the inaugural speeches of the presidents of the United States loaded as speech_df, with the speeches stored in the text column.

# Print the first 5 rows of the text column
print(speech_df['text'].head())

# <script.py> output:
#     0    Fellow-Citizens of the Senate and of the House...
#     1    Fellow Citizens:  I AM again called upon by th...
#     2    WHEN it was first perceived, in early times, t...
#     3    Friends and Fellow-Citizens:  CALLED upon to u...
#     4    PROCEEDING, fellow-citizens, to that qualifica...
#     Name: text, dtype: object

# Replace all non letter characters with a whitespace
speech_df['text_clean'] = speech_df['text'].str.replace('[^a-zA-Z]', ' ')

# Change to lower case
speech_df['text_clean'] = speech_df['text_clean'].str.lower()

# Print the first 5 rows of the text_clean column
print(speech_df['text_clean'].head())

# <script.py> output:
#     0    fellow citizens of the senate and of the house...
#     1    fellow citizens   i am again called upon by th...
#     2    when it was first perceived  in early times  t...
#     3    friends and fellow citizens   called upon to u...
#     4    proceeding  fellow citizens  to that qualifica...
#     Name: text_clean, dtype: object

